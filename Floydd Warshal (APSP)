#include <bits/stdc++.h>
using namespace std;

void floydWarshal(vector<vector<int>> cost)
{
    int n = cost.size() - 1;
    for (int k = 1; k <= n; k++)
    {
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n; j++)
                cost[i][j] = min(cost[i][j], cost[i][k] + cost[k][j]);
        }
    }
    for (auto row : cost)
    {
        for (auto wt : row)
            cout << wt << " ";
        cout << endl;
    }
}

int main()
{
    int n;
    cin >> n;
    vector<vector<int>> cost(n + 1, vector<int>(n + 1, 1e9));
    while (1)
    {
        int u, v, w;
        cin >> u >> v >> w;
        if (w < 0 or u < 1 or u > n or v < 1 or v > n)
            break;
        cost[u][v] = w;
        cost[v][u] = w;
    }
    for (int i = 1; i <= n; i++)
        cost[i][i] = 0;
    // for (auto row : graph)
    // {
    //     for (auto wt : row)
    //         cout << wt << " ";
    //     cout << endl;
    // }

    floydWarshal(cost);
    return 0;
}
